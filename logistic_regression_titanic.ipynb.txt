{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "69ef443a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# https://www.kaggle.com/c/titanic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d3b7b224",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "28432c5e",
   "metadata": {},
   "outputs": [],
   "source": [
    "titanic_data=pd.read_csv('Titanic-Dataset.csv')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "15233382",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Montvila, Rev. Juozas</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>211536</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Graham, Miss. Margaret Edith</td>\n",
       "      <td>female</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>112053</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>B42</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>W./C. 6607</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Behr, Mr. Karl Howell</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>111369</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>C148</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Dooley, Mr. Patrick</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>370376</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass  \\\n",
       "0              1         0       3   \n",
       "1              2         1       1   \n",
       "2              3         1       3   \n",
       "3              4         1       1   \n",
       "4              5         0       3   \n",
       "..           ...       ...     ...   \n",
       "886          887         0       2   \n",
       "887          888         1       1   \n",
       "888          889         0       3   \n",
       "889          890         1       1   \n",
       "890          891         0       3   \n",
       "\n",
       "                                                  Name     Sex   Age  SibSp  \\\n",
       "0                              Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                               Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                             Allen, Mr. William Henry    male  35.0      0   \n",
       "..                                                 ...     ...   ...    ...   \n",
       "886                              Montvila, Rev. Juozas    male  27.0      0   \n",
       "887                       Graham, Miss. Margaret Edith  female  19.0      0   \n",
       "888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n",
       "889                              Behr, Mr. Karl Howell    male  26.0      0   \n",
       "890                                Dooley, Mr. Patrick    male  32.0      0   \n",
       "\n",
       "     Parch            Ticket     Fare Cabin Embarked  \n",
       "0        0         A/5 21171   7.2500   NaN        S  \n",
       "1        0          PC 17599  71.2833   C85        C  \n",
       "2        0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3        0            113803  53.1000  C123        S  \n",
       "4        0            373450   8.0500   NaN        S  \n",
       "..     ...               ...      ...   ...      ...  \n",
       "886      0            211536  13.0000   NaN        S  \n",
       "887      0            112053  30.0000   B42        S  \n",
       "888      2        W./C. 6607  23.4500   NaN        S  \n",
       "889      0            111369  30.0000  C148        C  \n",
       "890      0            370376   7.7500   NaN        Q  \n",
       "\n",
       "[891 rows x 12 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9663f460",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name     Sex   Age  SibSp  \\\n",
       "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                           Allen, Mr. William Henry    male  35.0      0   \n",
       "\n",
       "   Parch            Ticket     Fare Cabin Embarked  \n",
       "0      0         A/5 21171   7.2500   NaN        S  \n",
       "1      0          PC 17599  71.2833   C85        C  \n",
       "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3      0            113803  53.1000  C123        S  \n",
       "4      0            373450   8.0500   NaN        S  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "20d9a2c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#sibsp no. of siblings / spouses aboard the Titanic\n",
    "#parch no. of parents / children aboard the Titanic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "740c6757",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>714.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>2.308642</td>\n",
       "      <td>29.699118</td>\n",
       "      <td>0.523008</td>\n",
       "      <td>0.381594</td>\n",
       "      <td>32.204208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>257.353842</td>\n",
       "      <td>0.486592</td>\n",
       "      <td>0.836071</td>\n",
       "      <td>14.526497</td>\n",
       "      <td>1.102743</td>\n",
       "      <td>0.806057</td>\n",
       "      <td>49.693429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.420000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>223.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>20.125000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.910400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>668.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>512.329200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
       "count   891.000000  891.000000  891.000000  714.000000  891.000000   \n",
       "mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n",
       "std     257.353842    0.486592    0.836071   14.526497    1.102743   \n",
       "min       1.000000    0.000000    1.000000    0.420000    0.000000   \n",
       "25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n",
       "50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n",
       "75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n",
       "max     891.000000    1.000000    3.000000   80.000000    8.000000   \n",
       "\n",
       "            Parch        Fare  \n",
       "count  891.000000  891.000000  \n",
       "mean     0.381594   32.204208  \n",
       "std      0.806057   49.693429  \n",
       "min      0.000000    0.000000  \n",
       "25%      0.000000    7.910400  \n",
       "50%      0.000000   14.454200  \n",
       "75%      0.000000   31.000000  \n",
       "max      6.000000  512.329200  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d9d45389",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(titanic_data.corr(numeric_only=True), annot = True,cmap=\"YlGnBu\")\n",
    "#The latest pandas version is not ignoring string values in the .corr function anymore. just add \"numeric_only=True\" \n",
    "#by plotting this graph we get to know what features are affecting the survived\n",
    "#more +ve nd -ve values affect\n",
    "#features around 0 are not significant\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "43bd6e45",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import StratifiedShuffleSplit\n",
    "# np.random.shuffle(titanic_data)\n",
    "split = StratifiedShuffleSplit(n_splits =1,test_size =0.2) #we want 20% of the data\n",
    "#we want the foll data to b equally distributed\n",
    "#we run a for loop\n",
    "for train_indices ,test_indices in split.split(titanic_data ,titanic_data[[\"Survived\",\"Pclass\",\"Sex\"]]):\n",
    "    strat_train_set = titanic_data.loc[train_indices] #train\n",
    "    strat_test_set = titanic_data.loc[test_indices] #test\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6ad79519",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>596</th>\n",
       "      <td>597</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Leitch, Miss. Jessie Wills</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>248727</td>\n",
       "      <td>33.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Kantor, Mr. Sinai</td>\n",
       "      <td>male</td>\n",
       "      <td>34.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>244367</td>\n",
       "      <td>26.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516</th>\n",
       "      <td>517</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Lemore, Mrs. (Amelia Milley)</td>\n",
       "      <td>female</td>\n",
       "      <td>34.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C.A. 34260</td>\n",
       "      <td>10.5000</td>\n",
       "      <td>F33</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>392</th>\n",
       "      <td>393</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Gustafsson, Mr. Johan Birger</td>\n",
       "      <td>male</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3101277</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>126</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Nicola-Yarred, Master. Elias</td>\n",
       "      <td>male</td>\n",
       "      <td>12.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2651</td>\n",
       "      <td>11.2417</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>575</th>\n",
       "      <td>576</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Patchett, Mr. George</td>\n",
       "      <td>male</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>358585</td>\n",
       "      <td>14.5000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>90</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Celotti, Mr. Francesco</td>\n",
       "      <td>male</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>343275</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>586</th>\n",
       "      <td>587</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Jarvis, Mr. John Denzil</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>237565</td>\n",
       "      <td>15.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>403</th>\n",
       "      <td>404</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Hakkarainen, Mr. Pekka Pietari</td>\n",
       "      <td>male</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101279</td>\n",
       "      <td>15.8500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>645</th>\n",
       "      <td>646</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Harper, Mr. Henry Sleeper</td>\n",
       "      <td>male</td>\n",
       "      <td>48.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17572</td>\n",
       "      <td>76.7292</td>\n",
       "      <td>D33</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>179 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass                            Name     Sex  \\\n",
       "596          597         1       2      Leitch, Miss. Jessie Wills  female   \n",
       "99           100         0       2               Kantor, Mr. Sinai    male   \n",
       "516          517         1       2    Lemore, Mrs. (Amelia Milley)  female   \n",
       "392          393         0       3    Gustafsson, Mr. Johan Birger    male   \n",
       "125          126         1       3    Nicola-Yarred, Master. Elias    male   \n",
       "..           ...       ...     ...                             ...     ...   \n",
       "575          576         0       3            Patchett, Mr. George    male   \n",
       "89            90         0       3          Celotti, Mr. Francesco    male   \n",
       "586          587         0       2         Jarvis, Mr. John Denzil    male   \n",
       "403          404         0       3  Hakkarainen, Mr. Pekka Pietari    male   \n",
       "645          646         1       1       Harper, Mr. Henry Sleeper    male   \n",
       "\n",
       "      Age  SibSp  Parch            Ticket     Fare Cabin Embarked  \n",
       "596   NaN      0      0            248727  33.0000   NaN        S  \n",
       "99   34.0      1      0            244367  26.0000   NaN        S  \n",
       "516  34.0      0      0        C.A. 34260  10.5000   F33        S  \n",
       "392  28.0      2      0           3101277   7.9250   NaN        S  \n",
       "125  12.0      1      0              2651  11.2417   NaN        C  \n",
       "..    ...    ...    ...               ...      ...   ...      ...  \n",
       "575  19.0      0      0            358585  14.5000   NaN        S  \n",
       "89   24.0      0      0            343275   8.0500   NaN        S  \n",
       "586  47.0      0      0            237565  15.0000   NaN        S  \n",
       "403  28.0      1      0  STON/O2. 3101279  15.8500   NaN        S  \n",
       "645  48.0      1      0          PC 17572  76.7292   D33        C  \n",
       "\n",
       "[179 rows x 12 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "strat_test_set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e0a3742e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplot(1,2,1)\n",
    "strat_train_set['Survived'].hist()\n",
    "strat_train_set['Pclass'].hist()\n",
    "\n",
    "plt.subplot(1,2,2)\n",
    "strat_test_set['Survived'].hist()\n",
    "strat_test_set['Pclass'].hist()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "34caa8a2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Weights: [-0.01230246 -0.06911982  0.01899994 -0.49952636  0.93833575]\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "# Sigmoid function\n",
    "def sigmoid(x):\n",
    "    return 1 / (1 + np.exp(-x))\n",
    "\n",
    "# Logistic regression function\n",
    "def logistic_regression(X, y, num_iterations=1000, learning_rate=0.01):\n",
    "    num_samples, num_features = X.shape\n",
    "    intercept = np.ones((num_samples, 1))\n",
    "    X = np.concatenate((intercept, X), axis=1)\n",
    "    weights = np.zeros(num_features + 1)\n",
    "    \n",
    "    for _ in range(num_iterations):\n",
    "        linear = np.dot(X, weights)\n",
    "        predictions = sigmoid(linear)\n",
    "        gradient = np.dot(X.T, (predictions - y)) / num_samples\n",
    "        weights -= learning_rate * gradient\n",
    "        \n",
    "    return weights\n",
    "\n",
    "# Fill missing values in 'Age' column with mean age\n",
    "titanic_data['Age'].fillna(titanic_data['Age'].mean(), inplace=True)\n",
    "\n",
    "# Converting 'Sex' column to numerical values (0 for male, 1 for female)\n",
    "titanic_data['Sex'] = titanic_data['Sex'].map({'male': 0, 'female': 1})\n",
    "\n",
    "# Extracting features and target variable\n",
    "X = titanic_data[['Age', 'Fare', 'Pclass', 'Sex']].values\n",
    "y = titanic_data['Survived'].values\n",
    "\n",
    "# logistic regression\n",
    "weights = logistic_regression(X, y)\n",
    "print(\"Weights:\", weights)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e3424d42",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Random Data Points with Survival Predictions:\n",
      "Age: 76, Fare: 22, Pclass: 2, Sex: female, Predicted Survival: No\n",
      "Age: 77, Fare: 89, Pclass: 2, Sex: male, Predicted Survival: No\n",
      "Age: 2, Fare: 32, Pclass: 1, Sex: female, Predicted Survival: Yes\n",
      "Age: 23, Fare: 93, Pclass: 3, Sex: male, Predicted Survival: No\n",
      "Age: 36, Fare: 169, Pclass: 1, Sex: female, Predicted Survival: Yes\n",
      "Age: 27, Fare: 254, Pclass: 1, Sex: male, Predicted Survival: Yes\n",
      "Age: 67, Fare: 104, Pclass: 3, Sex: male, Predicted Survival: No\n",
      "Age: 59, Fare: 222, Pclass: 3, Sex: female, Predicted Survival: No\n",
      "Age: 41, Fare: 50, Pclass: 1, Sex: female, Predicted Survival: No\n",
      "Age: 26, Fare: 71, Pclass: 2, Sex: female, Predicted Survival: No\n"
     ]
    }
   ],
   "source": [
    "# Generate random data points\n",
    "num_random_points = 10  # You can adjust this number\n",
    "random_age = np.random.randint(1, 80, num_random_points)\n",
    "random_fare = np.random.randint(0, 300, num_random_points)\n",
    "random_pclass = np.random.choice([1, 2, 3], size=num_random_points)\n",
    "random_sex = np.random.randint(0, 2, num_random_points)  # 0 for male, 1 for female\n",
    "\n",
    "# Create a DataFrame with random data points\n",
    "random_data = pd.DataFrame({\n",
    "    'Age': random_age,\n",
    "    'Fare': random_fare,\n",
    "    'Pclass': random_pclass,\n",
    "    'Sex': random_sex\n",
    "})\n",
    "\n",
    "# Apply logistic regression model to predict survival\n",
    "intercept = np.ones((random_data.shape[0], 1))\n",
    "X_random = np.concatenate((intercept, random_data), axis=1)\n",
    "linear_predictions = np.dot(X_random, weights)\n",
    "probabilities = sigmoid(linear_predictions)\n",
    "predictions = (probabilities >= 0.5).astype(int)\n",
    "\n",
    "# Print predictions\n",
    "print(\"Random Data Points with Survival Predictions:\")\n",
    "for i in range(num_random_points):\n",
    "    print(f\"Age: {random_age[i]}, Fare: {random_fare[i]}, Pclass: {random_pclass[i]}, Sex: {'female' if random_sex[i] == 1 else 'male'}, Predicted Survival: {'Yes' if predictions[i] == 1 else 'No'}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "edfe0be4",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
